/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { UserProfileListRelationFilter } from "../../userProfile/base/UserProfileListRelationFilter";
import { UserSessionListRelationFilter } from "../../userSession/base/UserSessionListRelationFilter";
import { UserRoleListRelationFilter } from "../../userRole/base/UserRoleListRelationFilter";
import { WebSocketListRelationFilter } from "../../webSocket/base/WebSocketListRelationFilter";
import { ApiKeyListRelationFilter } from "../../apiKey/base/ApiKeyListRelationFilter";
import { SubscriptionListRelationFilter } from "../../subscription/base/SubscriptionListRelationFilter";
import { AnalyticsEventListRelationFilter } from "../../analyticsEvent/base/AnalyticsEventListRelationFilter";
import { AuditLogListRelationFilter } from "../../auditLog/base/AuditLogListRelationFilter";
import { NotificationListRelationFilter } from "../../notification/base/NotificationListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phoneNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  lastLogin?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isActive?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  profilePicture?: JsonFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  twoFactorEnabled?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  preferredLanguage?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  timezone?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserProfileListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserProfileListRelationFilter)
  @IsOptional()
  @Field(() => UserProfileListRelationFilter, {
    nullable: true,
  })
  userProfiles?: UserProfileListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserSessionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserSessionListRelationFilter)
  @IsOptional()
  @Field(() => UserSessionListRelationFilter, {
    nullable: true,
  })
  userSessions?: UserSessionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserRoleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserRoleListRelationFilter)
  @IsOptional()
  @Field(() => UserRoleListRelationFilter, {
    nullable: true,
  })
  userRoles?: UserRoleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => WebSocketListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WebSocketListRelationFilter)
  @IsOptional()
  @Field(() => WebSocketListRelationFilter, {
    nullable: true,
  })
  webSockets?: WebSocketListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ApiKeyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ApiKeyListRelationFilter)
  @IsOptional()
  @Field(() => ApiKeyListRelationFilter, {
    nullable: true,
  })
  apiKeys?: ApiKeyListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SubscriptionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SubscriptionListRelationFilter)
  @IsOptional()
  @Field(() => SubscriptionListRelationFilter, {
    nullable: true,
  })
  subscriptions?: SubscriptionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AnalyticsEventListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AnalyticsEventListRelationFilter)
  @IsOptional()
  @Field(() => AnalyticsEventListRelationFilter, {
    nullable: true,
  })
  analyticsEvents?: AnalyticsEventListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AuditLogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AuditLogListRelationFilter)
  @IsOptional()
  @Field(() => AuditLogListRelationFilter, {
    nullable: true,
  })
  auditLogs?: AuditLogListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => NotificationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => NotificationListRelationFilter)
  @IsOptional()
  @Field(() => NotificationListRelationFilter, {
    nullable: true,
  })
  notifications?: NotificationListRelationFilter;
}

export { UserWhereInput as UserWhereInput };
