/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  AnalyticsEvent as PrismaAnalyticsEvent,
  User as PrismaUser,
  Collection as PrismaCollection,
} from "@prisma/client";

export class AnalyticsEventServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AnalyticsEventCountArgs, "select">
  ): Promise<number> {
    return this.prisma.analyticsEvent.count(args);
  }

  async analyticsEvents(
    args: Prisma.AnalyticsEventFindManyArgs
  ): Promise<PrismaAnalyticsEvent[]> {
    return this.prisma.analyticsEvent.findMany(args);
  }
  async analyticsEvent(
    args: Prisma.AnalyticsEventFindUniqueArgs
  ): Promise<PrismaAnalyticsEvent | null> {
    return this.prisma.analyticsEvent.findUnique(args);
  }
  async createAnalyticsEvent(
    args: Prisma.AnalyticsEventCreateArgs
  ): Promise<PrismaAnalyticsEvent> {
    return this.prisma.analyticsEvent.create(args);
  }
  async updateAnalyticsEvent(
    args: Prisma.AnalyticsEventUpdateArgs
  ): Promise<PrismaAnalyticsEvent> {
    return this.prisma.analyticsEvent.update(args);
  }
  async deleteAnalyticsEvent(
    args: Prisma.AnalyticsEventDeleteArgs
  ): Promise<PrismaAnalyticsEvent> {
    return this.prisma.analyticsEvent.delete(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.analyticsEvent
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }

  async getCollection(parentId: string): Promise<PrismaCollection | null> {
    return this.prisma.analyticsEvent
      .findUnique({
        where: { id: parentId },
      })
      .collection();
  }
}
