/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BackupSchedule as PrismaBackupSchedule } from "@prisma/client";

export class BackupScheduleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BackupScheduleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.backupSchedule.count(args);
  }

  async backupSchedules(
    args: Prisma.BackupScheduleFindManyArgs
  ): Promise<PrismaBackupSchedule[]> {
    return this.prisma.backupSchedule.findMany(args);
  }
  async backupSchedule(
    args: Prisma.BackupScheduleFindUniqueArgs
  ): Promise<PrismaBackupSchedule | null> {
    return this.prisma.backupSchedule.findUnique(args);
  }
  async createBackupSchedule(
    args: Prisma.BackupScheduleCreateArgs
  ): Promise<PrismaBackupSchedule> {
    return this.prisma.backupSchedule.create(args);
  }
  async updateBackupSchedule(
    args: Prisma.BackupScheduleUpdateArgs
  ): Promise<PrismaBackupSchedule> {
    return this.prisma.backupSchedule.update(args);
  }
  async deleteBackupSchedule(
    args: Prisma.BackupScheduleDeleteArgs
  ): Promise<PrismaBackupSchedule> {
    return this.prisma.backupSchedule.delete(args);
  }
}
