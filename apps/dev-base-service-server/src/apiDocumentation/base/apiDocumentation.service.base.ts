/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ApiDocumentation as PrismaApiDocumentation,
  Endpoint as PrismaEndpoint,
} from "@prisma/client";

export class ApiDocumentationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ApiDocumentationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.apiDocumentation.count(args);
  }

  async apiDocumentations(
    args: Prisma.ApiDocumentationFindManyArgs
  ): Promise<PrismaApiDocumentation[]> {
    return this.prisma.apiDocumentation.findMany(args);
  }
  async apiDocumentation(
    args: Prisma.ApiDocumentationFindUniqueArgs
  ): Promise<PrismaApiDocumentation | null> {
    return this.prisma.apiDocumentation.findUnique(args);
  }
  async createApiDocumentation(
    args: Prisma.ApiDocumentationCreateArgs
  ): Promise<PrismaApiDocumentation> {
    return this.prisma.apiDocumentation.create(args);
  }
  async updateApiDocumentation(
    args: Prisma.ApiDocumentationUpdateArgs
  ): Promise<PrismaApiDocumentation> {
    return this.prisma.apiDocumentation.update(args);
  }
  async deleteApiDocumentation(
    args: Prisma.ApiDocumentationDeleteArgs
  ): Promise<PrismaApiDocumentation> {
    return this.prisma.apiDocumentation.delete(args);
  }

  async getEndpoint(parentId: string): Promise<PrismaEndpoint | null> {
    return this.prisma.apiDocumentation
      .findUnique({
        where: { id: parentId },
      })
      .endpoint();
  }
}
