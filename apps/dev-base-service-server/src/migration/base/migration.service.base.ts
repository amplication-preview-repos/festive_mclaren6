/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Migration as PrismaMigration } from "@prisma/client";

export class MigrationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MigrationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.migration.count(args);
  }

  async migrations(
    args: Prisma.MigrationFindManyArgs
  ): Promise<PrismaMigration[]> {
    return this.prisma.migration.findMany(args);
  }
  async migration(
    args: Prisma.MigrationFindUniqueArgs
  ): Promise<PrismaMigration | null> {
    return this.prisma.migration.findUnique(args);
  }
  async createMigration(
    args: Prisma.MigrationCreateArgs
  ): Promise<PrismaMigration> {
    return this.prisma.migration.create(args);
  }
  async updateMigration(
    args: Prisma.MigrationUpdateArgs
  ): Promise<PrismaMigration> {
    return this.prisma.migration.update(args);
  }
  async deleteMigration(
    args: Prisma.MigrationDeleteArgs
  ): Promise<PrismaMigration> {
    return this.prisma.migration.delete(args);
  }
}
