/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsBoolean,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";

import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { IndexUpdateManyWithoutCollectionsInput } from "./IndexUpdateManyWithoutCollectionsInput";
import { Type } from "class-transformer";
import { DocumentUpdateManyWithoutCollectionsInput } from "./DocumentUpdateManyWithoutCollectionsInput";
import { SchemaUpdateManyWithoutCollectionsInput } from "./SchemaUpdateManyWithoutCollectionsInput";
import { SubscriptionUpdateManyWithoutCollectionsInput } from "./SubscriptionUpdateManyWithoutCollectionsInput";
import { AnalyticsEventUpdateManyWithoutCollectionsInput } from "./AnalyticsEventUpdateManyWithoutCollectionsInput";

@InputType()
class CollectionUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  schema?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isSchemaless?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  version?: number | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPublic?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => IndexUpdateManyWithoutCollectionsInput,
  })
  @ValidateNested()
  @Type(() => IndexUpdateManyWithoutCollectionsInput)
  @IsOptional()
  @Field(() => IndexUpdateManyWithoutCollectionsInput, {
    nullable: true,
  })
  indices?: IndexUpdateManyWithoutCollectionsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  owner?: string | null;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutCollectionsInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutCollectionsInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutCollectionsInput, {
    nullable: true,
  })
  documents?: DocumentUpdateManyWithoutCollectionsInput;

  @ApiProperty({
    required: false,
    type: () => SchemaUpdateManyWithoutCollectionsInput,
  })
  @ValidateNested()
  @Type(() => SchemaUpdateManyWithoutCollectionsInput)
  @IsOptional()
  @Field(() => SchemaUpdateManyWithoutCollectionsInput, {
    nullable: true,
  })
  schemata?: SchemaUpdateManyWithoutCollectionsInput;

  @ApiProperty({
    required: false,
    type: () => SubscriptionUpdateManyWithoutCollectionsInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionUpdateManyWithoutCollectionsInput)
  @IsOptional()
  @Field(() => SubscriptionUpdateManyWithoutCollectionsInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionUpdateManyWithoutCollectionsInput;

  @ApiProperty({
    required: false,
    type: () => AnalyticsEventUpdateManyWithoutCollectionsInput,
  })
  @ValidateNested()
  @Type(() => AnalyticsEventUpdateManyWithoutCollectionsInput)
  @IsOptional()
  @Field(() => AnalyticsEventUpdateManyWithoutCollectionsInput, {
    nullable: true,
  })
  analyticsEvents?: AnalyticsEventUpdateManyWithoutCollectionsInput;
}

export { CollectionUpdateInput as CollectionUpdateInput };
